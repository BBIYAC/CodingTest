'''
음료수 얼려먹기
NxM 크기의 얼음 틀이 주어졌을 때 생성되는 총 아이스크림 개수를 구하는 프로그램
구멍이 뚫려 있는 부분끼리 상, 하, 좌, 우로 붙어있는 경우 서로 연결되어 있는 것으로 간주

# 입력 조건
1. 첫 번째 얼음 틀의 세로 길이 N과 가로 길이 M이 주어진다.
2. 두 번째 줄부터 N+1 번째 줄까지 얼음 틀의 형태가 주어진다.
3. 이때 구멍이 뚫려 있는 부분은 0, 그렇지 않은 부분은 1 

# 출력 조건
한 번에 만들 수 있는 아이스크림 개수 출력

# 입력 예시
15 14
00000111100000
11111101111110
11011101101110
11011101100000
11011111111111
11011111111100
11000000011111
01111111111111
00000000011111
01111111111000
00011111111000
00000001111000
11111111110011
11100011111111
11100011111111

# 출력 예시
8
'''

n, m = map(int, input('>> ').split())
frame = []
for i in range(n):
    frame.append(list(map(int, input('>> '))))

# DFS로 특정한 노드를 방문한 뒤에 연결된 모든 노드들도 방문
def dfs(x,y):
    # 주어진 범위를 벗어나는 경우에는 즉시 종료
    if x<=-1 or x>=n or y<=-1 or y>=m:
        return False
    # 현재 노드를 아직 방문하지 않았다면
    if frame[x][y] == 0:
        # 현재 노드 방문 처리
        frame[x][y] = 1
        # 상, 하, 좌, 우 위치 재귀호출로 검사
        dfs(x-1, y) # 상
        dfs(x+1, y) # 하
        dfs(x, y-1) # 좌
        dfs(x, y+1) # 우
        return True
    return False

def solution():
    count = 0
    for i in range(n):
        for j in range(m):
            if dfs(i, j):
                count += 1
    return count

print(solution())